var helpers = require("../../../../../../.nvm/versions/node/v14.17.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
// myFlix-client/src/main-view/main-view.jsx
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _loginView = require("../login-view/login-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null
        };
    }
    componentDidMount() {
        _axiosDefault.default.get('https://my-flix-14618.herokuapp.com/movies').then((response)=>{
            this.setState({
                movies: response.data
            });
        }).catch((err)=>{
            console.log(err);
        });
    }
    /* When a movie is clicked, this function is invoked and updates the state of the `selectedMovie`*property to that movie*/ setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    /* When a user successfully logs in, this function updates the `user`property in state to that *particular user*/ onLoggedIn(user) {
        this.setState({
            user
        });
    }
    render() {
        const { movies , selectedMovie  } = this.state;
        /* If there is  no user, the LoginView is rendered. If there is a user logged in, the user details are *pressed as a prop to the LoginView*/ if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
            on: true,
            LoggedIn: (user)=>this.onLoggedIn(user)
            ,
            __source: {
                fileName: "/Users/koolau/Documents/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 50
            },
            __self: this
        }));
        // Before the movies have been loaded
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "/Users/koolau/Documents/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 53
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "/Users/koolau/Documents/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 56
            },
            __self: this
        }, "/*If the state of `selectedMovie`is not null, that selected movie will be returned otherwise, all *movies will be returned*/", selectedMovie ? /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
            movie: selectedMovie,
            onBackClick: (newSelectedMovie)=>{
                this.setSelectedMovie(newSelectedMovie);
            },
            __source: {
                fileName: "/Users/koolau/Documents/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 59
            },
            __self: this
        }) : movies.map((movie)=>/*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                key: movie._id,
                movie: movie,
                onMovieClick: (newSelectedMovie)=>{
                    this.setSelectedMovie(newSelectedMovie);
                },
                __source: {
                    fileName: "/Users/koolau/Documents/myProjects/myFlix-client/src/components/main-view/main-view.jsx",
                    lineNumber: 61
                },
                __self: this
            })
        )));
    }
}

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}